services:
    nginx:
        # コンテナの作成に使用するDockerfileのパス
        build:
            dockerfile: "./docker/nginx/Dockerfile"
            # ホスト側のポート:コンテナ側のポートを指定
        depends_on:
            - php
        volumes:
            - ./var/lib/mysql:/usr/local/var/mysql
            - .:/var/www/aristo-backend
        ports:
            - "8080:80"
        # src配下のファイルをコンテナ内の~/var/www/html配下に配置
        # volumes:
        #     - .:/var/www/aristo-backend
        environment:
            - PHP_HOST=php
    php:
        build:
            context: .
            dockerfile: ./docker/php/Dockerfile
        depends_on:
            mysql:
                condition: service_healthy
        volumes:
            - ./var/lib/mysql:/usr/local/var/mysql
            - .:/var/www/aristo-backend
        command: /bin/sh -c "composer install && php artisan migrate --force && php artisan storage:link && php artisan optimize:clear && php artisan optimize && php artisan config:clear && php artisan route:clear && php artisan view:clear && php-fpm"
        ports:
            - 9000
            - "5173:5173"
            - "6001:6001"
        tty: true

    phpmyadmin:
        depends_on:
            - mysql
        image: phpmyadmin/phpmyadmin
        environment:
            - PMA_HOST=mysql
            - PMA_PORT=3306
        ports:
            - 8001:80
    mysql:
        image: "mysql/mysql-server:8.0"
        ports:
            - "${FORWARD_DB_PORT:-3306}:3306"
        environment:
            MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
            MYSQL_ROOT_HOST: "%"
            MYSQL_DATABASE: "${DB_DATABASE}"
            MYSQL_USER: "${DB_USERNAME}"
            MYSQL_PASSWORD: "${DB_PASSWORD}"
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - ./docker/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh
            # - ./docker/mysql:/var/lib/mysql
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - "-p${DB_PASSWORD}"
            retries: 3
            timeout: 5s
    redis:
        image: "redis:alpine"
        ports:
            - "${FORWARD_REDIS_PORT:-6379}:6379"
        # volumes:
        #     - '${DATA_PATH_HOST}/redis:/data'
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            retries: 3
            timeout: 5s
    # redistest: # テスト用のRedis
    #     image: "redis:alpine"
    #     hostname: "redistest"
    #     container_name: "redistest"
    #     ports:
    #         - "6380:6379"
    #     healthcheck:
    #         test: ["CMD", "redis-cli", "ping"]
    #         retries: 3
    #         timeout: 5s

    # laravel-horizon:
    #     build:
    #         context: ./docker/laravel-horizon
    #     volumes:
    #         - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    #         - ./docker/laravel-horizon/supervisord.d:/etc/supervisord.d
    #     depends_on:
    #         - php-fpm
    #     extra_hosts:
    #         - "dockerhost:${DOCKER_HOST_IP}"
    #     networks:
    #         - sail
    #    meilisearch:
    #        image: 'getmeili/meilisearch:latest'
    #        ports:
    #            - '${FORWARD_MEILISEARCH_PORT:-7700}:7700'
    #        volumes:
    #            - 'sail-meilisearch:/data.ms'
    #        networks:
    #            - sail
    #        healthcheck:
    #            test: ["CMD", "wget", "--no-verbose", "--spider",  "http://localhost:7700/health"]
    #            retries: 3
    #            timeout: 5s
    # mailhog:
    #     image: 'mailhog/mailhog:latest'
    #     ports:
    #         - '${FORWARD_MAILHOG_PORT:-1025}:1025'
    #         - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'
    #     networks:
    #         - sail
    #    selenium:
    #        image: 'selenium/standalone-chrome'
    #        volumes:
    #            - '/dev/shm:/dev/shm'
    #        networks:
    #            - sail
    # networks:
    #     sail:
    #         driver: bridge
    # volumes:
    #     sail-mysql:
    #         driver: local
    #     sail-redis:
    #         driver: local
    #     sail-meilisearch:
    #         driver: local
